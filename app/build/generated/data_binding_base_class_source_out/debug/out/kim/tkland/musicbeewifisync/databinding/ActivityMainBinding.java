// Generated by view binder compiler. Do not edit!
package kim.tkland.musicbeewifisync.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kim.tkland.musicbeewifisync.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout syncFrom;

  @NonNull
  public final CheckBox syncFromMusicBee;

  @NonNull
  public final TextView syncFromPrompt;

  @NonNull
  public final Guideline syncHalfWidthGuideline;

  @NonNull
  public final RadioButton syncPlayerGoneMad;

  @NonNull
  public final RadioButton syncPlayerPowerAmp;

  @NonNull
  public final Button syncPreviewButton;

  @NonNull
  public final TextView syncServerStatus;

  @NonNull
  public final LinearLayout syncStartButton;

  @NonNull
  public final ImageView syncStartButtonImage;

  @NonNull
  public final TextView syncStartButtonText;

  @NonNull
  public final LinearLayout syncTo;

  @NonNull
  public final CheckBox syncToPlayCounts;

  @NonNull
  public final EditText syncToPlaylistPath;

  @NonNull
  public final CheckBox syncToPlaylists;

  @NonNull
  public final TextView syncToPrompt;

  @NonNull
  public final CheckBox syncToRatings;

  @NonNull
  public final RadioGroup syncToUsingPlayer;

  @NonNull
  public final TextView syncToUsingPrompt;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout syncFrom,
      @NonNull CheckBox syncFromMusicBee, @NonNull TextView syncFromPrompt,
      @NonNull Guideline syncHalfWidthGuideline, @NonNull RadioButton syncPlayerGoneMad,
      @NonNull RadioButton syncPlayerPowerAmp, @NonNull Button syncPreviewButton,
      @NonNull TextView syncServerStatus, @NonNull LinearLayout syncStartButton,
      @NonNull ImageView syncStartButtonImage, @NonNull TextView syncStartButtonText,
      @NonNull LinearLayout syncTo, @NonNull CheckBox syncToPlayCounts,
      @NonNull EditText syncToPlaylistPath, @NonNull CheckBox syncToPlaylists,
      @NonNull TextView syncToPrompt, @NonNull CheckBox syncToRatings,
      @NonNull RadioGroup syncToUsingPlayer, @NonNull TextView syncToUsingPrompt) {
    this.rootView = rootView;
    this.syncFrom = syncFrom;
    this.syncFromMusicBee = syncFromMusicBee;
    this.syncFromPrompt = syncFromPrompt;
    this.syncHalfWidthGuideline = syncHalfWidthGuideline;
    this.syncPlayerGoneMad = syncPlayerGoneMad;
    this.syncPlayerPowerAmp = syncPlayerPowerAmp;
    this.syncPreviewButton = syncPreviewButton;
    this.syncServerStatus = syncServerStatus;
    this.syncStartButton = syncStartButton;
    this.syncStartButtonImage = syncStartButtonImage;
    this.syncStartButtonText = syncStartButtonText;
    this.syncTo = syncTo;
    this.syncToPlayCounts = syncToPlayCounts;
    this.syncToPlaylistPath = syncToPlaylistPath;
    this.syncToPlaylists = syncToPlaylists;
    this.syncToPrompt = syncToPrompt;
    this.syncToRatings = syncToRatings;
    this.syncToUsingPlayer = syncToUsingPlayer;
    this.syncToUsingPrompt = syncToUsingPrompt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.syncFrom;
      LinearLayout syncFrom = ViewBindings.findChildViewById(rootView, id);
      if (syncFrom == null) {
        break missingId;
      }

      id = R.id.syncFromMusicBee;
      CheckBox syncFromMusicBee = ViewBindings.findChildViewById(rootView, id);
      if (syncFromMusicBee == null) {
        break missingId;
      }

      id = R.id.syncFromPrompt;
      TextView syncFromPrompt = ViewBindings.findChildViewById(rootView, id);
      if (syncFromPrompt == null) {
        break missingId;
      }

      id = R.id.syncHalfWidthGuideline;
      Guideline syncHalfWidthGuideline = ViewBindings.findChildViewById(rootView, id);
      if (syncHalfWidthGuideline == null) {
        break missingId;
      }

      id = R.id.syncPlayerGoneMad;
      RadioButton syncPlayerGoneMad = ViewBindings.findChildViewById(rootView, id);
      if (syncPlayerGoneMad == null) {
        break missingId;
      }

      id = R.id.syncPlayerPowerAmp;
      RadioButton syncPlayerPowerAmp = ViewBindings.findChildViewById(rootView, id);
      if (syncPlayerPowerAmp == null) {
        break missingId;
      }

      id = R.id.syncPreviewButton;
      Button syncPreviewButton = ViewBindings.findChildViewById(rootView, id);
      if (syncPreviewButton == null) {
        break missingId;
      }

      id = R.id.syncServerStatus;
      TextView syncServerStatus = ViewBindings.findChildViewById(rootView, id);
      if (syncServerStatus == null) {
        break missingId;
      }

      id = R.id.syncStartButton;
      LinearLayout syncStartButton = ViewBindings.findChildViewById(rootView, id);
      if (syncStartButton == null) {
        break missingId;
      }

      id = R.id.syncStartButtonImage;
      ImageView syncStartButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (syncStartButtonImage == null) {
        break missingId;
      }

      id = R.id.syncStartButtonText;
      TextView syncStartButtonText = ViewBindings.findChildViewById(rootView, id);
      if (syncStartButtonText == null) {
        break missingId;
      }

      id = R.id.syncTo;
      LinearLayout syncTo = ViewBindings.findChildViewById(rootView, id);
      if (syncTo == null) {
        break missingId;
      }

      id = R.id.syncToPlayCounts;
      CheckBox syncToPlayCounts = ViewBindings.findChildViewById(rootView, id);
      if (syncToPlayCounts == null) {
        break missingId;
      }

      id = R.id.syncToPlaylistPath;
      EditText syncToPlaylistPath = ViewBindings.findChildViewById(rootView, id);
      if (syncToPlaylistPath == null) {
        break missingId;
      }

      id = R.id.syncToPlaylists;
      CheckBox syncToPlaylists = ViewBindings.findChildViewById(rootView, id);
      if (syncToPlaylists == null) {
        break missingId;
      }

      id = R.id.syncToPrompt;
      TextView syncToPrompt = ViewBindings.findChildViewById(rootView, id);
      if (syncToPrompt == null) {
        break missingId;
      }

      id = R.id.syncToRatings;
      CheckBox syncToRatings = ViewBindings.findChildViewById(rootView, id);
      if (syncToRatings == null) {
        break missingId;
      }

      id = R.id.syncToUsingPlayer;
      RadioGroup syncToUsingPlayer = ViewBindings.findChildViewById(rootView, id);
      if (syncToUsingPlayer == null) {
        break missingId;
      }

      id = R.id.syncToUsingPrompt;
      TextView syncToUsingPrompt = ViewBindings.findChildViewById(rootView, id);
      if (syncToUsingPrompt == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, syncFrom, syncFromMusicBee,
          syncFromPrompt, syncHalfWidthGuideline, syncPlayerGoneMad, syncPlayerPowerAmp,
          syncPreviewButton, syncServerStatus, syncStartButton, syncStartButtonImage,
          syncStartButtonText, syncTo, syncToPlayCounts, syncToPlaylistPath, syncToPlaylists,
          syncToPrompt, syncToRatings, syncToUsingPlayer, syncToUsingPrompt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
