// Generated by view binder compiler. Do not edit!
package kim.tkland.musicbeewifisync.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kim.tkland.musicbeewifisync.R;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button locateServerButton;

  @NonNull
  public final CheckBox settingsDebugMode;

  @NonNull
  public final EditText settingsDeviceName;

  @NonNull
  public final TextView settingsDeviceNamePrompt;

  @NonNull
  public final Button settingsGrantAccessButton;

  @NonNull
  public final TextView settingsInfo0;

  @NonNull
  public final TextView settingsInfo1;

  @NonNull
  public final TextView settingsInfo2;

  @NonNull
  public final TextView settingsLocateServerNoConfig;

  @NonNull
  public final RadioButton settingsStorageInternal;

  @NonNull
  public final RadioGroup settingsStorageOptions;

  @NonNull
  public final TextView settingsStoragePrompt;

  @NonNull
  public final RadioButton settingsStorageSdCard1;

  @NonNull
  public final ProgressBar settingsWaitIndicator;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button locateServerButton, @NonNull CheckBox settingsDebugMode,
      @NonNull EditText settingsDeviceName, @NonNull TextView settingsDeviceNamePrompt,
      @NonNull Button settingsGrantAccessButton, @NonNull TextView settingsInfo0,
      @NonNull TextView settingsInfo1, @NonNull TextView settingsInfo2,
      @NonNull TextView settingsLocateServerNoConfig, @NonNull RadioButton settingsStorageInternal,
      @NonNull RadioGroup settingsStorageOptions, @NonNull TextView settingsStoragePrompt,
      @NonNull RadioButton settingsStorageSdCard1, @NonNull ProgressBar settingsWaitIndicator) {
    this.rootView = rootView;
    this.locateServerButton = locateServerButton;
    this.settingsDebugMode = settingsDebugMode;
    this.settingsDeviceName = settingsDeviceName;
    this.settingsDeviceNamePrompt = settingsDeviceNamePrompt;
    this.settingsGrantAccessButton = settingsGrantAccessButton;
    this.settingsInfo0 = settingsInfo0;
    this.settingsInfo1 = settingsInfo1;
    this.settingsInfo2 = settingsInfo2;
    this.settingsLocateServerNoConfig = settingsLocateServerNoConfig;
    this.settingsStorageInternal = settingsStorageInternal;
    this.settingsStorageOptions = settingsStorageOptions;
    this.settingsStoragePrompt = settingsStoragePrompt;
    this.settingsStorageSdCard1 = settingsStorageSdCard1;
    this.settingsWaitIndicator = settingsWaitIndicator;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.locateServerButton;
      Button locateServerButton = ViewBindings.findChildViewById(rootView, id);
      if (locateServerButton == null) {
        break missingId;
      }

      id = R.id.settingsDebugMode;
      CheckBox settingsDebugMode = ViewBindings.findChildViewById(rootView, id);
      if (settingsDebugMode == null) {
        break missingId;
      }

      id = R.id.settingsDeviceName;
      EditText settingsDeviceName = ViewBindings.findChildViewById(rootView, id);
      if (settingsDeviceName == null) {
        break missingId;
      }

      id = R.id.settingsDeviceNamePrompt;
      TextView settingsDeviceNamePrompt = ViewBindings.findChildViewById(rootView, id);
      if (settingsDeviceNamePrompt == null) {
        break missingId;
      }

      id = R.id.settingsGrantAccessButton;
      Button settingsGrantAccessButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsGrantAccessButton == null) {
        break missingId;
      }

      id = R.id.settingsInfo0;
      TextView settingsInfo0 = ViewBindings.findChildViewById(rootView, id);
      if (settingsInfo0 == null) {
        break missingId;
      }

      id = R.id.settingsInfo1;
      TextView settingsInfo1 = ViewBindings.findChildViewById(rootView, id);
      if (settingsInfo1 == null) {
        break missingId;
      }

      id = R.id.settingsInfo2;
      TextView settingsInfo2 = ViewBindings.findChildViewById(rootView, id);
      if (settingsInfo2 == null) {
        break missingId;
      }

      id = R.id.settingsLocateServerNoConfig;
      TextView settingsLocateServerNoConfig = ViewBindings.findChildViewById(rootView, id);
      if (settingsLocateServerNoConfig == null) {
        break missingId;
      }

      id = R.id.settingsStorageInternal;
      RadioButton settingsStorageInternal = ViewBindings.findChildViewById(rootView, id);
      if (settingsStorageInternal == null) {
        break missingId;
      }

      id = R.id.settingsStorageOptions;
      RadioGroup settingsStorageOptions = ViewBindings.findChildViewById(rootView, id);
      if (settingsStorageOptions == null) {
        break missingId;
      }

      id = R.id.settingsStoragePrompt;
      TextView settingsStoragePrompt = ViewBindings.findChildViewById(rootView, id);
      if (settingsStoragePrompt == null) {
        break missingId;
      }

      id = R.id.settingsStorageSdCard1;
      RadioButton settingsStorageSdCard1 = ViewBindings.findChildViewById(rootView, id);
      if (settingsStorageSdCard1 == null) {
        break missingId;
      }

      id = R.id.settingsWaitIndicator;
      ProgressBar settingsWaitIndicator = ViewBindings.findChildViewById(rootView, id);
      if (settingsWaitIndicator == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, locateServerButton,
          settingsDebugMode, settingsDeviceName, settingsDeviceNamePrompt,
          settingsGrantAccessButton, settingsInfo0, settingsInfo1, settingsInfo2,
          settingsLocateServerNoConfig, settingsStorageInternal, settingsStorageOptions,
          settingsStoragePrompt, settingsStorageSdCard1, settingsWaitIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
